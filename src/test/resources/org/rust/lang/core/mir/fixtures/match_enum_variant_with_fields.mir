fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at src/main.rs:2:11: 2:11
    let _1: E;                           // in scope 0 at src/main.rs:3:9: 3:10
    let _2: i32;                         // in scope 0 at src/main.rs:4:5: 8:6
    let mut _3: isize;                   // in scope 0 at src/main.rs:5:9: 5:16
    scope 1 {
        debug e => _1;                   // in scope 1 at src/main.rs:3:9: 3:10
        let _4: i32;                     // in scope 1 at src/main.rs:5:14: 5:15
        let _5: i32;                     // in scope 1 at src/main.rs:6:14: 6:16
        let _6: i32;                     // in scope 1 at src/main.rs:6:18: 6:20
        let _7: i32;                     // in scope 1 at src/main.rs:7:14: 7:16
        let _8: i32;                     // in scope 1 at src/main.rs:7:18: 7:20
        let _9: i32;                     // in scope 1 at src/main.rs:7:22: 7:24
        scope 2 {
            debug a => _4;               // in scope 2 at src/main.rs:5:14: 5:15
        }
        scope 3 {
            debug b1 => _5;              // in scope 3 at src/main.rs:6:14: 6:16
            debug b2 => _6;              // in scope 3 at src/main.rs:6:18: 6:20
        }
        scope 4 {
            debug c1 => _7;              // in scope 4 at src/main.rs:7:14: 7:16
            debug c2 => _8;              // in scope 4 at src/main.rs:7:18: 7:20
            debug c3 => _9;              // in scope 4 at src/main.rs:7:22: 7:24
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at src/main.rs:3:9: 3:10
        _1 = E::A(const 0_i32);          // scope 0 at src/main.rs:3:13: 3:20
        FakeRead(ForLet(None), _1);      // scope 0 at src/main.rs:3:9: 3:10
        StorageLive(_2);                 // scope 1 at src/main.rs:4:5: 8:6
        FakeRead(ForMatchedPlace(None), _1); // scope 1 at src/main.rs:4:11: 4:12
        _3 = discriminant(_1);           // scope 1 at src/main.rs:4:11: 4:12
        switchInt(move _3) -> [0: bb1, 1: bb2, 2: bb3, otherwise: bb4]; // scope 1 at src/main.rs:4:5: 4:10
    }

    bb1: {
        falseEdge -> [real: bb5, imaginary: bb2]; // scope 1 at src/main.rs:5:9: 5:16
    }

    bb2: {
        falseEdge -> [real: bb6, imaginary: bb3]; // scope 1 at src/main.rs:6:9: 6:21
    }

    bb3: {
        StorageLive(_7);                 // scope 1 at src/main.rs:7:14: 7:16
        _7 = ((_1 as C).0: i32);         // scope 1 at src/main.rs:7:14: 7:16
        StorageLive(_8);                 // scope 1 at src/main.rs:7:18: 7:20
        _8 = ((_1 as C).1: i32);         // scope 1 at src/main.rs:7:18: 7:20
        StorageLive(_9);                 // scope 1 at src/main.rs:7:22: 7:24
        _9 = ((_1 as C).2: i32);         // scope 1 at src/main.rs:7:22: 7:24
        _2 = const 3_i32;                // scope 4 at src/main.rs:7:31: 7:32
        StorageDead(_9);                 // scope 1 at src/main.rs:7:33: 7:34
        StorageDead(_8);                 // scope 1 at src/main.rs:7:33: 7:34
        StorageDead(_7);                 // scope 1 at src/main.rs:7:33: 7:34
        goto -> bb7;                     // scope 1 at src/main.rs:7:33: 7:34
    }

    bb4: {
        unreachable;                     // scope 1 at src/main.rs:4:11: 4:12
    }

    bb5: {
        StorageLive(_4);                 // scope 1 at src/main.rs:5:14: 5:15
        _4 = ((_1 as A).0: i32);         // scope 1 at src/main.rs:5:14: 5:15
        _2 = const 1_i32;                // scope 2 at src/main.rs:5:22: 5:23
        StorageDead(_4);                 // scope 1 at src/main.rs:5:24: 5:25
        goto -> bb7;                     // scope 1 at src/main.rs:5:24: 5:25
    }

    bb6: {
        StorageLive(_5);                 // scope 1 at src/main.rs:6:14: 6:16
        _5 = ((_1 as B).0: i32);         // scope 1 at src/main.rs:6:14: 6:16
        StorageLive(_6);                 // scope 1 at src/main.rs:6:18: 6:20
        _6 = ((_1 as B).1: i32);         // scope 1 at src/main.rs:6:18: 6:20
        _2 = const 2_i32;                // scope 3 at src/main.rs:6:27: 6:28
        StorageDead(_6);                 // scope 1 at src/main.rs:6:29: 6:30
        StorageDead(_5);                 // scope 1 at src/main.rs:6:29: 6:30
        goto -> bb7;                     // scope 1 at src/main.rs:6:29: 6:30
    }

    bb7: {
        StorageDead(_2);                 // scope 1 at src/main.rs:8:6: 8:7
        _0 = const ();                   // scope 0 at src/main.rs:2:11: 9:2
        StorageDead(_1);                 // scope 0 at src/main.rs:9:1: 9:2
        return;                          // scope 0 at src/main.rs:9:2: 9:2
    }
}
