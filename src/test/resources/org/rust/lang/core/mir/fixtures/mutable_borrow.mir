fn foo() -> () {
    let mut _0: ();                      // return place in scope 0 at src/main.rs:3:10: 3:10
    let mut _1: S;                       // in scope 0 at src/main.rs:4:9: 4:14
    scope 1 {
        debug s => _1;                   // in scope 1 at src/main.rs:4:9: 4:14
        let _2: &mut S;                  // in scope 1 at src/main.rs:5:9: 5:11
        scope 2 {
            debug s1 => _2;              // in scope 2 at src/main.rs:5:9: 5:11
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at src/main.rs:4:9: 4:14
        _1 = S;                          // scope 0 at src/main.rs:4:17: 4:18
        FakeRead(ForLet(None), _1);      // scope 0 at src/main.rs:4:9: 4:14
        StorageLive(_2);                 // scope 1 at src/main.rs:5:9: 5:11
        _2 = &mut _1;                    // scope 1 at src/main.rs:5:14: 5:20
        FakeRead(ForLet(None), _2);      // scope 1 at src/main.rs:5:9: 5:11
        _0 = const ();                   // scope 0 at src/main.rs:3:10: 6:2
        StorageDead(_2);                 // scope 1 at src/main.rs:6:1: 6:2
        StorageDead(_1);                 // scope 0 at src/main.rs:6:1: 6:2
        return;                          // scope 0 at src/main.rs:6:2: 6:2
    }
}
