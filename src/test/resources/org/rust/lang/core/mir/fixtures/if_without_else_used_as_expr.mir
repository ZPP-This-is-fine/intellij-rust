fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at src/main.rs:1:11: 1:11
    let _1: ();                          // in scope 0 at src/main.rs:2:9: 2:10
    let mut _2: bool;                    // in scope 0 at src/main.rs:2:16: 2:20
    scope 1 {
        debug x => _1;                   // in scope 1 at src/main.rs:2:9: 2:10
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at src/main.rs:2:9: 2:10
        StorageLive(_2);                 // scope 0 at src/main.rs:2:16: 2:20
        _2 = const true;                 // scope 0 at src/main.rs:2:16: 2:20
        switchInt(move _2) -> [0: bb2, otherwise: bb1]; // scope 0 at src/main.rs:2:16: 2:20
    }

    bb1: {
        _1 = const ();                   // scope 0 at src/main.rs:2:21: 2:23
        goto -> bb4;                     // scope 0 at src/main.rs:2:13: 2:23
    }

    bb2: {
        goto -> bb3;                     // scope 0 at src/main.rs:2:16: 2:20
    }

    bb3: {
        _1 = const ();                   // scope 0 at src/main.rs:2:23: 2:23
        goto -> bb4;                     // scope 0 at src/main.rs:2:13: 2:23
    }

    bb4: {
        StorageDead(_2);                 // scope 0 at src/main.rs:2:22: 2:23
        FakeRead(ForLet(None), _1);      // scope 0 at src/main.rs:2:9: 2:10
        _0 = const ();                   // scope 0 at src/main.rs:1:11: 3:2
        StorageDead(_1);                 // scope 0 at src/main.rs:3:1: 3:2
        return;                          // scope 0 at src/main.rs:3:2: 3:2
    }
}
