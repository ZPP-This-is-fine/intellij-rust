fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at src/main.rs:8:11: 8:11
    let _1: E1;                          // in scope 0 at src/main.rs:9:9: 9:11
    let mut _4: i32;                     // in scope 0 at src/main.rs:11:23: 11:24
    let mut _6: E1;                      // in scope 0 at src/main.rs:12:26: 12:28
    let mut _7: E1;                      // in scope 0 at src/main.rs:12:39: 12:41
    scope 1 {
        debug v1 => _1;                  // in scope 1 at src/main.rs:9:9: 9:11
        let _2: i32;                     // in scope 1 at src/main.rs:10:9: 10:10
        scope 2 {
            debug a => _2;               // in scope 2 at src/main.rs:10:9: 10:10
            let _3: E1;                  // in scope 2 at src/main.rs:11:9: 11:11
            scope 3 {
                debug v2 => _3;          // in scope 3 at src/main.rs:11:9: 11:11
                let _5: E2;              // in scope 3 at src/main.rs:12:9: 12:11
                scope 4 {
                    debug v3 => _5;      // in scope 4 at src/main.rs:12:9: 12:11
                }
            }
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at src/main.rs:9:9: 9:11
        _1 = E1::V1;                     // scope 0 at src/main.rs:9:14: 9:20
        FakeRead(ForLet(None), _1);      // scope 0 at src/main.rs:9:9: 9:11
        StorageLive(_2);                 // scope 1 at src/main.rs:10:9: 10:10
        _2 = const 1_i32;                // scope 1 at src/main.rs:10:13: 10:14
        FakeRead(ForLet(None), _2);      // scope 1 at src/main.rs:10:9: 10:10
        StorageLive(_3);                 // scope 2 at src/main.rs:11:9: 11:11
        StorageLive(_4);                 // scope 2 at src/main.rs:11:23: 11:24
        _4 = _2;                         // scope 2 at src/main.rs:11:23: 11:24
        _3 = E1::V2 { a: move _4 };      // scope 2 at src/main.rs:11:14: 11:26
        StorageDead(_4);                 // scope 2 at src/main.rs:11:25: 11:26
        FakeRead(ForLet(None), _3);      // scope 2 at src/main.rs:11:9: 11:11
        StorageLive(_5);                 // scope 3 at src/main.rs:12:9: 12:11
        StorageLive(_6);                 // scope 3 at src/main.rs:12:26: 12:28
        _6 = move _1;                    // scope 3 at src/main.rs:12:26: 12:28
        StorageLive(_7);                 // scope 3 at src/main.rs:12:39: 12:41
        _7 = move _3;                    // scope 3 at src/main.rs:12:39: 12:41
        _5 = E2::V3 { a: const 2_i32, b: move _7, c: move _6 }; // scope 3 at src/main.rs:12:14: 12:43
        StorageDead(_7);                 // scope 3 at src/main.rs:12:42: 12:43
        StorageDead(_6);                 // scope 3 at src/main.rs:12:42: 12:43
        FakeRead(ForLet(None), _5);      // scope 3 at src/main.rs:12:9: 12:11
        _0 = const ();                   // scope 0 at src/main.rs:8:11: 13:2
        StorageDead(_5);                 // scope 3 at src/main.rs:13:1: 13:2
        StorageDead(_3);                 // scope 2 at src/main.rs:13:1: 13:2
        StorageDead(_2);                 // scope 1 at src/main.rs:13:1: 13:2
        StorageDead(_1);                 // scope 0 at src/main.rs:13:1: 13:2
        return;                          // scope 0 at src/main.rs:13:2: 13:2
    }
}
