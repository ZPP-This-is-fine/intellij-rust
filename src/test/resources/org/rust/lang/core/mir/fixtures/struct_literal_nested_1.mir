fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at src/main.rs:3:11: 3:11
    let _1: Foo1;                        // in scope 0 at src/main.rs:4:9: 4:13
    let mut _3: Foo1;                    // in scope 0 at src/main.rs:5:26: 5:30
    scope 1 {
        debug foo1 => _1;                // in scope 1 at src/main.rs:4:9: 4:13
        let _2: Foo2;                    // in scope 1 at src/main.rs:5:9: 5:13
        scope 2 {
            debug foo2 => _2;            // in scope 2 at src/main.rs:5:9: 5:13
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at src/main.rs:4:9: 4:13
        _1 = Foo1 { a: const 0_i32 };    // scope 0 at src/main.rs:4:16: 4:29
        FakeRead(ForLet(None), _1);      // scope 0 at src/main.rs:4:9: 4:13
        StorageLive(_2);                 // scope 1 at src/main.rs:5:9: 5:13
        StorageLive(_3);                 // scope 1 at src/main.rs:5:26: 5:30
        _3 = move _1;                    // scope 1 at src/main.rs:5:26: 5:30
        _2 = Foo2 { b: move _3 };        // scope 1 at src/main.rs:5:16: 5:32
        StorageDead(_3);                 // scope 1 at src/main.rs:5:31: 5:32
        FakeRead(ForLet(None), _2);      // scope 1 at src/main.rs:5:9: 5:13
        _0 = const ();                   // scope 0 at src/main.rs:3:11: 6:2
        StorageDead(_2);                 // scope 1 at src/main.rs:6:1: 6:2
        StorageDead(_1);                 // scope 0 at src/main.rs:6:1: 6:2
        return;                          // scope 0 at src/main.rs:6:2: 6:2
    }
}
