fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at src/main.rs:1:11: 1:11
    let mut _1: i32;                     // in scope 0 at src/main.rs:2:9: 2:14
    let mut _2: &mut i32;                // in scope 0 at src/main.rs:3:11: 3:17
    scope 1 {
        debug x => _1;                   // in scope 1 at src/main.rs:2:9: 2:14
        let _3: i32;                     // in scope 1 at src/main.rs:4:14: 4:15
        scope 2 {
            debug y => _3;               // in scope 2 at src/main.rs:4:14: 4:15
        }
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at src/main.rs:2:9: 2:14
        _1 = const 1_i32;                // scope 0 at src/main.rs:2:17: 2:18
        FakeRead(ForLet(None), _1);      // scope 0 at src/main.rs:2:9: 2:14
        StorageLive(_2);                 // scope 1 at src/main.rs:3:11: 3:17
        _2 = &mut _1;                    // scope 1 at src/main.rs:3:11: 3:17
        FakeRead(ForMatchedPlace(None), _2); // scope 1 at src/main.rs:3:11: 3:17
        StorageLive(_3);                 // scope 1 at src/main.rs:4:14: 4:15
        _3 = (*_2);                      // scope 1 at src/main.rs:4:14: 4:15
        _0 = const ();                   // scope 2 at src/main.rs:4:19: 4:21
        StorageDead(_3);                 // scope 1 at src/main.rs:4:20: 4:21
        goto -> bb1;                     // scope 1 at src/main.rs:4:20: 4:21
    }

    bb1: {
        StorageDead(_1);                 // scope 0 at src/main.rs:6:1: 6:2
        StorageDead(_2);                 // scope 0 at src/main.rs:6:1: 6:2
        return;                          // scope 0 at src/main.rs:6:2: 6:2
    }
}
