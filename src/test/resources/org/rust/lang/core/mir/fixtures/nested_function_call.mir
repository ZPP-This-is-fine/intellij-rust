fn main() -> () {
    let mut _0: ();                      // return place in scope 0 at src/main.rs:1:11: 1:11
    let _1: i32;                         // in scope 0 at src/main.rs:2:9: 2:10
    let mut _2: i32;                     // in scope 0 at src/main.rs:2:17: 2:26
    let mut _3: i32;                     // in scope 0 at src/main.rs:2:28: 2:37
    scope 1 {
        debug a => _1;                   // in scope 1 at src/main.rs:2:9: 2:10
    }

    bb0: {
        StorageLive(_1);                 // scope 0 at src/main.rs:2:9: 2:10
        StorageLive(_2);                 // scope 0 at src/main.rs:2:17: 2:26
        _2 = foo(const 1_i32, const 2_i32) -> [return: bb1, unwind: bb4]; // scope 0 at src/main.rs:2:17: 2:26
    }

    bb1: {
        StorageLive(_3);                 // scope 0 at src/main.rs:2:28: 2:37
        _3 = foo(const 1_i32, const 2_i32) -> [return: bb2, unwind: bb4]; // scope 0 at src/main.rs:2:28: 2:37
    }

    bb2: {
        _1 = foo(move _2, move _3) -> [return: bb3, unwind: bb4]; // scope 0 at src/main.rs:2:13: 2:38
    }

    bb3: {
        StorageDead(_3);                 // scope 0 at src/main.rs:2:37: 2:38
        StorageDead(_2);                 // scope 0 at src/main.rs:2:37: 2:38
        FakeRead(ForLet(None), _1);      // scope 0 at src/main.rs:2:9: 2:10
        _0 = const ();                   // scope 0 at src/main.rs:1:11: 3:2
        StorageDead(_1);                 // scope 0 at src/main.rs:3:1: 3:2
        return;                          // scope 0 at src/main.rs:3:2: 3:2
    }

    bb4 (cleanup): {
        resume;                          // scope 0 at src/main.rs:1:1: 3:2
    }
}
